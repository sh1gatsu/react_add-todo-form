{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserByID","userId","usersFromServer","find","App","useState","preparedTodo","setPreparedTodo","todoTitle","setTodoTitle","isPressed","setIsPressed","setUserId","userRuleErr","titleRuleErr","trim","length","addingAndCheckingTodo","newTodo","Math","max","state","handleAddTodo","action","method","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.292af625.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserByID(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserByID(todo.userId),\n}));\n\nexport const App = () => {\n  const [preparedTodo, setPreparedTodo] = useState(todos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [isPressed, setIsPressed] = useState(false);\n  const [userId, setUserId] = useState(0);\n\n  const userRuleErr = isPressed && userId === 0;\n  const titleRuleErr = isPressed && todoTitle.trim().length === 0;\n\n  const handleAddTodo = () => {\n    const id = preparedTodo.map(todo => todo.id);\n\n    if (todoTitle.length > 0 && todoTitle.trim() && userId !== 0) {\n      const newTodo: Todo = {\n        id: Math.max(...id) + 1,\n        title: todoTitle,\n        userId,\n        completed: false,\n        user: getUserByID(userId),\n      };\n\n      setPreparedTodo(state => [...state, newTodo]);\n      setTodoTitle('');\n      setUserId(0);\n    }\n  };\n\n  const addingAndCheckingTodo = () => {\n    handleAddTodo();\n\n    if (todoTitle.trim().length !== 0 && userId !== 0) {\n      setIsPressed(false);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsPressed(true);\n    addingAndCheckingTodo();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={todoTitle}\n              onChange={handleTitleChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {titleRuleErr && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              value={userId}\n              data-cy=\"userSelect\"\n              onChange={handleUserChange}\n            >\n              <option disabled value=\"0\">Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userRuleErr && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={preparedTodo} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}